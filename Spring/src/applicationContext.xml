<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd">
	<bean id="messageBean" class="chap1.MessageBeanKo" />
	<bean id="runner" class="chap1.BuildRunner">
		<!-- setPath('c:\') 메서드가 호출 -->
		<property name="path">
			<value>c:\</value>
		</property>
	</bean>
	<bean id="Project" class="chap1.Project">
		<!-- setSrcDirs(List<String>)리스트 형태 (DI형태의 객체 주입 ) -->
		<property name="srcDirs">
			<list>
				<value>src\</value>
				<value>srcResources</value>
			</list>
		</property>
		<!-- setBinDir("bin") -->
		<property name="binDir" value="bin" />
		<!-- setBuildRunner(runner 객체) -->
		<property name="buildRunner">
			<ref bean="runner" />
		</property>
	</bean>
	<bean id="messageBean2" class="chap1.MessageBeanImpl">
		<constructor-arg><!-- 생성자 를 통해서 객체 주입!! -->
			<value>Spring</value>
		</constructor-arg>
		<property name="greeting" value="니하오 ," />
		<property name="outputter">
			<ref bean="outputter" />
		</property>
	</bean>
	<bean id="outputter" class="chap1.FileOutputter">
		<property name="filePath" value="out.txt" />
	</bean>

	<bean id="messageBean3" class="chap1.MessageBeanImpl3">
		<property name="name">
			<value>Spring</value>
		</property>
	</bean>
	<bean id="LoggingAdvice" class="chap1.LoggingAdvice" />
	<bean id="proxy" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<ref bean="messageBean3" />
		</property>
		<property name="interceptorNames">
			<list>
				<value>advisor</value>
			</list>
		</property>
	</bean>
	<bean id="advisor" class="org.springframework.aop.support.DefaultPointcutAdvisor">
		<property name="advice">
			<ref bean="LoggingAdvice" />
		</property>
		<property name="pointcut">
			<bean class="org.springframework.aop.support.JdkRegexpMethodPointcut">
				<property name="pattern">
					<value>.*sayHello.*</value>
				</property>
			</bean>
		</property>
	</bean>
</beans>